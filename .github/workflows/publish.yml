name: package-publish

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      publish:
        description: "패키지 배포 여부"
        required: true
        default: "yes"
        type: choice
        options:
          - "yes"
          - "no"
      package_path:
        description: "배포할 패키지 경로 (예: packages/ui)"
        required: true
        default: "packages/ui"

jobs:
  version-check:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check.outputs.exists }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if version already exists
        id: check
        run: |
          PKG_NAME=$(jq -r .name ${{ github.event.inputs.package_path }}/package.json)
          PKG_VERSION=$(jq -r .version ${{ github.event.inputs.package_path }}/package.json)
          EXISTS=$(npm view $PKG_NAME@$PKG_VERSION --registry=https://npm.pkg.github.com/ 2>/dev/null || echo "notfound")
          if [ "$EXISTS" != "notfound" ]; then
            echo "Version $PKG_VERSION already exists. Skipping publish."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: version-check
    if: needs.version-check.outputs.exists == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
      - run: pnpm install

  set-publish-flag:
    needs: build
    if: needs.version-check.outputs.exists == 'false'
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.set-flag.outputs.publish }}
    steps:
      - id: set-flag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "publish=${{ github.event.inputs.publish }}" >> $GITHUB_OUTPUT
          else
            echo "publish=yes" >> $GITHUB_OUTPUT
          fi

  publish-gpr:
    needs: set-publish-flag
    if: needs.version-check.outputs.exists == 'false' && needs.set-publish-flag.outputs.publish == 'yes'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
      - uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Install & Build package
        run: |
          pnpm install
          pnpm build
        working-directory: ${{ github.event.inputs.package_path }}

      - name: Publish to GitHub Packages
        run: pnpm publish --registry=https://npm.pkg.github.com/
        working-directory: ${{ github.event.inputs.package_path }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
